<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.online.shop.dao.AdminDAO">
	
	<!-- 카테고리 호출 -->
	<select id="category" resultType="com.online.shop.vo.CateVO">
		select level, SC_NAME, SC_CODE, SC_CODEREF from SCATEGORY 
		start with SC_CODEREF is null connect by prior 
		SC_CODE = SC_CODEREF
	</select>

	<!-- 상품 등록 -->
	<insert id="register">
		insert into SPRODUCT (SP_NUM, SP_NAME, SC_CODE, SP_PRICE, SP_STOCK, SP_DES, SP_IMG, SP_THUMBIMG) 
		values(SPRODUCT_SEQ.nextval, #{SP_NAME}, #{SC_CODE}, #{SP_PRICE}, #{SP_STOCK}, #{SP_DES}, #{SP_IMG}, #{SP_THUMBIMG})
	</insert>

	<!-- 상품 리스트 -->
	<select id="productList" resultType="ProductViewVO">
		 select
		     g.SP_NUM, g.SP_NAME, g.SC_CODE, c.SC_CODEREF, c.SC_NAME, SP_PRICE, 
		     SP_STOCK, SP_DES, SP_IMG, g.SP_IMG, g.SP_THUMBIMG
		         from SPRODUCT g
		             inner join SCATEGORY c
		                 on g.SC_CODE = c.SC_CODE
	</select>
	
	<!-- 상품 조회 
	<select id="productDetail" parameterType="int" resultType="ProductVO">
		select * from SPRODUCT where sp_num=#{SP_NUM}
	</select>-->
	
	<!-- 상품 삭제 -->
	<delete id="productDelete" parameterType="int">
		delete SPRODUCT where sp_num= ${param1}
	</delete>
	
	<!-- 상품조회 + 카테고리 조인 -->
	<select id="productDetail" parameterType="int" resultType="com.online.shop.vo.ProductViewVO">
	 select
	     g.SP_NUM, g.SP_NAME, g.SC_CODE, c.SC_CODEREF, c.SC_NAME, SP_PRICE, SP_STOCK, SP_DES, SP_IMG
	     , g.SP_IMG, g.SP_THUMBIMG
	         from SPRODUCT g
	             inner join SCATEGORY c
	                 on g.SC_CODE = c.SC_CODE          
	            where g.SP_NUM = ${param1}
	</select>
	
	<!-- 상품 수정 -->
	<update id="productModify">
	 update SPRODUCT
	     set
	         SP_NAME = #{SP_NAME},
	         SC_CODE = #{SC_CODE},
	         SP_PRICE = #{SP_PRICE},
	         SP_STOCK = #{SP_STOCK},
	         SP_DES = #{SP_DES},
	         SP_IMG = #{SP_IMG},
	         SP_THUMBIMG = #{SP_THUMBIMG}
	         
	     where SP_NUM = ${SP_NUM}
	</update>
	
	<!-- 회원 목록 -->
	<select id="memberlist" resultType="com.online.shop.vo.MemberVO">
		select * from SMEMBER
	</select>
	
	<!-- 회원삭제 -->
	<delete id="memberdelete" parameterType="String">
		delete SMEMBER where S_ID= #{param1}
	</delete>
	
	<!-- 모든 유저의 주문 목록 -->
	<select id="adminorderList" resultType="com.online.shop.vo.OrderVO">
		select orderId, S_ID, orderRec, userAddr1, userAddr2, 
		userAddr3, orderPhon, amount, orderDate, delivery
		from s_order
	</select>
	
	<!-- 특정 주문 목록 -->
	<select id="adminorderView" resultType="com.online.shop.vo.OrderListVO">
		select
		o.orderId, o.S_ID, o.orderRec,
		o.userAddr1, o.userAddr2, o.userAddr3,
		o.orderPhon, o.amount, o.orderDate, o.delivery,
		d.orderDetailNum, d.SP_NUM, d.SP_STOCK,
		g.SP_NAME, g.SP_THUMBIMG, g.SP_PRICE
		from s_order o
			inner join s_order_details d
				on o.orderId = d.orderId
			inner join SPRODUCT g
				on d.SP_NUM = g.SP_NUM
		where o.orderId = #{orderId}
	</select>
	
	<!-- 배송 상태 -->
	<update id="delivery">
	 update s_order set delivery = #{delivery} where orderId = #{orderId}
	</update>
	
	<!-- 상품 수량 조절 -->
	<update id="changeStock">
	 update SPRODUCT set SP_STOCK = SP_STOCK - #{SP_STOCK} where SP_NUM = #{SP_NUM}
	</update>
	
	<!--  모든 소감(댓글) -->
	<select id="allReply" resultType="com.online.shop.vo.ReplyListVO">
	select r.SP_NUM, r.S_ID, r.S_reqNum, r.S_repCon, r.S_repDate, m.S_NAME 
	from s_reply r inner join SMEMBER m on r.S_ID = m.S_ID
	</select>
	
	<!-- 소감(댓글) 지우기 -->
	<delete id="deleteReply" parameterType="int">
		delete s_reply where S_reqNum = ${param1}
	</delete>
	
</mapper>